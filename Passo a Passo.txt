Passo 1: digitar o comando: func init

Passo 2: escolher a opção: node -> javascript

Passo 3: abrir o code

Passo 4: digitar o comando: func new

Passo 5: escolher as opções: HTTP Trigger -> CreateFuncionario (abrir o code)

Passo 6: alterar o arquivo: CreatePalestrante/function.json ->
		"authLevel": "anonymous",
		"methods": ["post"],
      		"route": "funcionario"

Passo 6.1: alterar o arquivo: local.settings.json para incluir o CORS!!!

  "Host": {
    "LocalHttpPort": 7071,
    "CORS": "*"
  }

Passo 7: Instalar o mongodb -> npm i mongodb

Passo 8: Criar uma pasta: shared/mongo.js

Passo 9: dentro do arquivo mongo.js digitar o snippet:
	->  mongo-serverless-conn

Passo 10: alterar o arquivo: index.js e digitar o snippet:
	-> mongo-serverless-create

Passo 11: executar a função: func host start

Passo 12: abrir o mongodb (mongo compass)

Passo 13: alterar o arquivo no front (palestrante.service.ts) e incluir a url da função e executar o comando:
	-> ng serve -o
	-> Keilla Menezes
	-> Elementar, Meu Caro Ivy

Passo 14: mostrar q persistiu localmente no MongoDb Compass

Passo 15: criar nova função para listar os palestrantes: func new

Passo 16: escolher as opções: HTTP Trigger -> GetPalestrantes (abrir o code)

Passo 17: alterar o arquivo: GetPalestrantes/function.json ->
		"authLevel": "anonymous",
		"methods": ["get"],
      		"route": "palestrantes"


Passo 18: alterar o arquivo: index.js e digitar o snippet:
	-> list-palestrantes-serverless


Passo 19: executar a função: func host start

Passo 20: executar a aplicação no Front para listar os palestrantes contidos no MongoDb Compass
